apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: where-for-dinner-ui
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
  labels:
    app.kubernetes.io/part-of: where-for-dinner-ui
    apps.tanzu.vmware.com/workload-type: web
    networking.knative.dev/visibility: cluster-local
    app.kubernetes.io/component: run
    carto.run/workload-name: where-for-dinner-ui
spec:
  template:
    metadata:
      annotations:
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
          appliveview-sample/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"where-for-dinner-ui","apps.tanzu.vmware.com/workload-type":"web","networking.knative.dev/visibility":"cluster-local"},"name":"where-for-dinner-ui","namespace":"my-apps"},"spec":{"params":[{"name":"gitops_repository","value":"ssh://git@github.com/dapdelivery/where-for-dinner-dest-22-02-2023-13-17-50-104967261.git"},{"name":"gitops_ssh_secret","value":"git-ssh"}],"source":{"git":{"ref":{"branch":"main"},"url":"ssh://git@github.com/dapdelivery/where-for-dinner-app.git"},"subPath":"where-for-dinner-ui"}}}
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: where-for-dinner-ui
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: where-for-dinner-ui
        networking.knative.dev/visibility: cluster-local
    spec:
      containers:
      - image: dev.registry.tanzu.vmware.com/tanzu-application-platform/ci-pipeline/apps-22-02-2023-13-17-50-104967261/where-for-dinner-ui-my-apps@sha256:3a0c996cc298a94fce1673c5333d23f44163fafcd40c386147610fd15911801b
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

